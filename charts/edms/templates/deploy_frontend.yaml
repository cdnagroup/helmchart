apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "edms.fullname" . }}-edms-frontend
  labels:
    {{- include "edms.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "edms.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "edms.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "edms.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: {{ template "edms.fullname" . }}-app
          persistentVolumeClaim:
            claimName: {{ template "edms.fullname" . }}-app
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/local/bin/entrypoint.sh", "run_frontend"]
          volumeMounts:
          - mountPath: /var/lib/mayan
            name: {{ template "edms.fullname" . }}-app
          env:
          - name: MAYAN_CELERY_BROKER_URL
            value: "redis://{{ include "edms.fullname" . }}-redis:6379/1"
          - name: MAYAN_CELERY_RESULT_BACKEND
            value: "redis://{{ include "edms.fullname" . }}-redis:6379/0"
          - name: MAYAN_DATABASES
            value: "{'default':{'ENGINE':'django.db.backends.postgresql','NAME':'{{ .Values.config.POSTGRES_NAME }}','PASSWORD':'{{ .Values.config.POSTGRES_PASS }}','USER':'{{ .Values.config.POSTGRES_USER }}','HOST':'{{ include "edms.fullname" . }}-db'}}"
          {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ tpl .value $ }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command: ["true"]    
            # httpGet:
            #   path: /
            #   port: http
          readinessProbe:
            exec:
              command: ["true"]    
            # httpGet:
            #   path: /
            #   port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
